// labwatch-app/types/incidents.ts
import { AlertSeverity } from './alerts'; // Assuming AlertSeverity is also applicable here

export interface Incident {
  id: string; // Firestore document ID
  title: string;
  description: string;
  roomId: string; // Required: ID of the room where the incident occurred
  roomName?: string; // Optional: Denormalized room name for display
  alertId?: string; // Optional: ID of the alert related to this incident
  reportedBy: string; // User ID or name
  reportedAt: Date;
  updatedAt?: Date;
  status: 'open' | 'in_progress' | 'resolved' | 'closed';
  severity: AlertSeverity; // Re-use AlertSeverity or define a specific IncidentSeverity
  actionsTaken?: string[];
  resolutionDetails?: string;
  // Add any other fields relevant to your lab monitoring system
  // e.g., equipmentInvolved, substancesInvolved, followUpRequired, etc.
}

// For creating new incidents, ID is generated by Firestore
export type NewIncident = Omit<Incident, 'id' | 'reportedAt' | 'updatedAt'> & {
  reportedAt?: Date; // Will be set by server/function
};

// For updating incidents
export type UpdateIncident = Partial<Omit<Incident, 'id' | 'roomId' | 'reportedBy' | 'reportedAt'>>;